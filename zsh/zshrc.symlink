source ~/.zplug/init.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi


# PLUGINS

zplug "zplug/zplug"
zplug 'junegunn/fzf', hook-build:"./install --all"
zplug "supercrabtree/k"
zplug "mafredri/zsh-async"
zplug "sindresorhus/pure"
zplug "huyng/bashmarks", use:"*.sh"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load # --verbose


# BINDINGS

bindkey '^p' fzf-file-widget
bindkey '^r' fzf-history-widget

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^[[3~' delete-char
bindkey '^[^N' newtab
bindkey '^?' backward-delete-char

## xterm arch linux
bindkey '^[[1;3D' backward-word ### Alt left
bindkey '^[[1;3C' forward-word ### Alt right

bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

# OPTIONS

HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
SRC=$HOME/src

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt SHARE_HISTORY # share history between sessions ???
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
#setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

# don't expand aliases _before_ completion has finished
#   like: git comm-[tab]
setopt complete_aliases

# zle -N newtab

# TERMINAL="urxvtc"
TERMINAL="alacritty"


# ALIASES

alias l='k -h'

alias grep='grep --color'
alias ls='ls --color'
alias nvimrc='nvim ~/.config/nvim/init.vim'
alias vim=nvim

function clean-steam {
    find ~/.steam/root/ \( -name "libgcc_s.so*" -o -name "libstdc++.so*" -o -name "libxcb.so*" \) -print -delete && \
    find ~/.local/share/Steam/ \( -name "libgcc_s.so*" -o -name "libstdc++.so*" -o -name "libxcb.so*" \) -print -delete && \
    echo 'done cleaning steam'
}

# bashmarks override. keep dependency as we need `s` to save
c () {
	check_help $1
	source $SDIRS
	target="$(eval $(echo echo $(echo \$DIR_$1)))" 
	if [ -d "$target" ]
	then
		cd "$target"
	elif [ ! -n "$target" ]
	then
    if [ ! -z "$1" ] && [ -s "$SRC/$1" ]; then
        cd "$SRC/$1"
    else
        echo -e "\033[${RED}WARNING: '${1}' bashmark does not exist\033[00m"
    fi
	else
		echo -e "\033[${RED}WARNING: '${target}' does not exist\033[00m"
	fi
}


# PROMPT
autoload -U promptinit && promptinit


# PATH

export DOTFILES=$HOME/.dotfiles
export PATH=$DOTFILES/bin:$PATH
export VISUAL=nvim
export EDITOR="$VISUAL"
export SYSTEMD_EDITOR="$VISUAL"
export GIT_EDITOR="$VISUAL"
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

alias octave="octave --no-gui"

export RUST_BACKTRACE=1;
export RUST_SRC_PATH=~/.multirust/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src
